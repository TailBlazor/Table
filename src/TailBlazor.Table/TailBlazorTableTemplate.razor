@namespace TailBlazor.Table
@typeparam TItem

<table class="@TableClass">
    <thead class="@HeaderClass">
        <tr>
            @TableHeader
        </tr>
    </thead>
    <tbody class="@BodyClass @(StripeRows? "" : "divide-y divide-gray-300")">
        @for (int i = 0; i < items.Count(); i++)
        {
            int itemId = i;
            var item = items[itemId];
            <tr @key="item" class="@(StripeRows && (itemId % 2 == 0) ? "bg-gray-50" : "bg-white") @(item.RowClass)">
                @RowTemplate(item)
            </tr>

            @if (item.ShowChildTemplate)
            {
                <tr class="bg-white @(item.ChildRowClass)">
                    @ChildTemplate(item)
                </tr>
            }
        }
    </tbody>
</table>

@code {
    List<TItem> items = new List<TItem>();
    protected async override Task OnParametersSetAsync() {
        items = Items.ToList();
    }
}